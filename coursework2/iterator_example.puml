@startuml Iterator

!define ITERATOR_CLASS_TEMPLATE(classname, datatype)
class classname {
  +createIterator(): Iterator<datatype>
}

!define ITERATOR_INTERFACE_TEMPLATE(datatype)
interface Iterator<datatype> {
  +hasNext(): boolean
  +next(): datatype
}

!define AGGREGATE_CLASS_TEMPLATE(classname, datatype)
class classname {
  -data: datatype[]
  +createIterator(): Iterator<datatype>
}

' ConcreteIterator class
ITERATOR_CLASS_TEMPLATE(ConcreteIterator, int)

' ConcreteAggregate class
AGGREGATE_CLASS_TEMPLATE(ConcreteAggregate, int)

' Client class
class Client {
  -iterator: Iterator<int>
  +main()
}

Client --> ConcreteAggregate
Client --> ConcreteIterator
Client --> Iterator

@enduml
