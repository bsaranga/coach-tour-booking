@startuml ASPNETCoreApp

!define ASYNC true

class aspnetcore_framework.DIContainer as "AspNetCore_DIContainer" #palegreen {

}

hide empty members

interface aspnetcore_framework.IController {

}

class aspnetcore_framework.ServiceCollection {

}

interface aspnetcore_framework.IServiceCollection {

}

interface aspnetcore_framework.Middleware {

}

class aspnetcore_framework.AuthorizationMiddleware {

}

class aspnetcore_framework.AuthenticationMiddleware {

}

class application.Controller {

}

class aspnetcore_framework.Program {

}

interface application.IScopedService {

}

class application.ScopedService {

}

class application.CoachTourCore_DbContext {

}

abstract aspnetcore_framework.DbContext {

}

interface application.IRepository {

}

class application.Repository {

}

aspnetcore_framework.DIContainer ..> aspnetcore_framework.ServiceCollection
aspnetcore_framework.DIContainer .> aspnetcore_framework.Middleware
aspnetcore_framework.DIContainer ..> aspnetcore_framework.IController
aspnetcore_framework.IServiceCollection --|> aspnetcore_framework.ServiceCollection

aspnetcore_framework.Program --> aspnetcore_framework.DIContainer

aspnetcore_framework.Middleware ..> aspnetcore_framework.IController
aspnetcore_framework.AuthorizationMiddleware ..> aspnetcore_framework.Middleware
aspnetcore_framework.AuthenticationMiddleware ..> aspnetcore_framework.Middleware

application.Controller --|> aspnetcore_framework.IController

application.ScopedService ..> application.IScopedService

aspnetcore_framework.ServiceCollection -> application.ScopedService: <<scoped>>

application.CoachTourCore_DbContext -|> aspnetcore_framework.DbContext

aspnetcore_framework.ServiceCollection --> application.CoachTourCore_DbContext: <<scoped>>

application.Repository ..> application.IRepository
application.Repository -> application.CoachTourCore_DbContext

aspnetcore_framework.ServiceCollection -> application.Repository: <<scoped>>
application.ScopedService -> application.IRepository

application.Controller -> application.IScopedService

@enduml