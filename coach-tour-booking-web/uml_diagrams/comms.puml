@startuml
hide footbox

actor Employee as "Europe Bus Employee"
actor Customer

box "User Interface Layer (SPA)" #LightGreen
participant SPA as "Single Page Application"
end box

box "API Layer" #LightSkyBlue
participant AuthN as "Authentication Middleware"
participant AuthZ as "Authorization Middleware"
participant IdentityAPI as "Identity API Controller"
participant RouteAPI as "Route API Controller"
participant BookingAPI as "Booking API Controller"
participant EmailService as "Email Service"
end box

box "Data Access Layer" #LightYellow
participant ORM as "Object-Relational Mapper (ORM)"
end box

box "Data Layer" #LightPink
participant DB as "Database"
end box

Customer -> SPA : Register Account
activate SPA 
SPA -> IdentityAPI: Register Account Request
activate IdentityAPI 
IdentityAPI -> ORM : New User Info 
deactivate IdentityAPI 
activate ORM 
ORM -> DB : Transform and Execute SQL
deactivate ORM 
deactivate SPA

Customer -> SPA : Email Verification
activate SPA 
SPA -> AuthZ : Verify Email
activate AuthZ
AuthZ -> IdentityAPI : Verify Email
deactivate AuthZ
activate IdentityAPI 
IdentityAPI -> ORM : Email Verification
activate ORM 
ORM -> DB : Transform and Execute SQL
DB --> ORM : Verification Result
ORM --> IdentityAPI : Verification Result
deactivate ORM 
IdentityAPI -> EmailService : Send Confirmation Email
deactivate IdentityAPI
activate EmailService
EmailService --> Customer : Confirmation Email
deactivate EmailService
deactivate SPA

Customer -> SPA : Login
activate SPA 
Employee -> SPA : Login
SPA -> AuthN: Authenticate User
activate AuthN 
AuthN -> ORM : User Info Verification
activate ORM 
ORM -> DB : Transform and Execute SQL
DB --> ORM : Verification Result
ORM --> AuthN : Verification Result
deactivate ORM
AuthN -> AuthN: Create Claims Principal
AuthN --> SPA : Send JWT Token
deactivate AuthN
SPA -> SPA : Store JWT as Cookies
activate SPA
deactivate SPA
deactivate SPA

Employee -> SPA : Manage Routes (CUD)
activate SPA
SPA -> AuthN: {JWT Claims, Manage Routes Request}
activate AuthN
AuthN -> AuthN: Create Claims Principal
activate AuthN
AuthN -> AuthZ
deactivate AuthN
activate AuthZ
deactivate AuthN
AuthZ -> RouteAPI : Manage Routes Request
deactivate AuthZ
activate RouteAPI 
RouteAPI -> ORM : Create/Update/Delete Route Info
activate ORM 
ORM -> DB : Transform and Execute SQL
DB --> ORM
ORM --> RouteAPI: CUD Result
deactivate ORM
RouteAPI --> SPA: CUD Result
deactivate RouteAPI 
deactivate SPA 

Employee -> SPA : View list of all Routes
activate SPA 
SPA -> AuthN : {JWT Claims, Fetch All Routes Request}
activate AuthN
AuthN -> AuthN: Create Claims Principal
activate AuthN
AuthN -> AuthZ
deactivate AuthN
activate AuthZ
deactivate AuthN
AuthZ -> RouteAPI : Fetch All Routes Request
deactivate AuthZ
activate RouteAPI 
RouteAPI -> ORM : Retrieve All Routes
activate ORM 
ORM -> DB : Transform and Execute SQL
DB --> ORM
ORM --> RouteAPI: List of Routes
deactivate ORM
RouteAPI --> SPA: List of Routes
deactivate RouteAPI
deactivate SPA

Customer -> SPA : Search available Journeys
activate SPA 
SPA -> AuthN : {JWT Claims, Search Journeys Request}
activate AuthN
AuthN -> AuthN: Create Claims Principal
activate AuthN
AuthN -> AuthZ
deactivate AuthN
activate AuthZ
deactivate AuthN
AuthZ -> RouteAPI : Search Journeys Request
deactivate AuthZ
activate RouteAPI 
RouteAPI -> ORM : Retrieve Journey Info
activate ORM 
ORM -> DB : Transform and Execute SQL
DB --> ORM
ORM --> RouteAPI: Journey Info
deactivate ORM
RouteAPI --> SPA: Journey Info
deactivate RouteAPI 
deactivate SPA 

Customer -> SPA : Book a Journey
activate SPA 
SPA -> AuthN : {JWT Claims, Book Journey Request}
activate AuthN
AuthN -> AuthN: Create Claims Principal
activate AuthN
AuthN -> AuthZ
deactivate AuthN
activate AuthZ
deactivate AuthN
AuthZ -> BookingAPI : Book Journey Request
deactivate AuthZ
activate BookingAPI 
BookingAPI -> ORM : Validate and Save Booking Info
activate ORM 
ORM -> DB : Transform and Execute SQL
DB --> ORM
ORM --> BookingAPI: Response
deactivate ORM 
BookingAPI --> SPA
deactivate BookingAPI 
deactivate SPA 
@enduml